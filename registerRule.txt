a = r0
b = r1
c = r2

powerful function

emitOp = (op, r0, r1, r2) :: value
getReg = (name, env) :: register

==============
OP
1. a = b + c 
ADD r0, r1, r2

getReg(a, env) :: r0
getReg(b, env) :: r1
getReg(c, env) :: r2
emitOp(ADD,a,b,c):: r0

global:a = b + c
ADD r0 = r1 + r2
SETG a, r0

getReg(b, env) :: r1
getReg(c, env) :: r2
emitOp(ADD, null, b, c) :: r0
emitOp(SETG, r0, r1, r2) :: r0

a = global:b + c

GETG r1, b
ADD r0, r1, r2
==============
print(a)

r0 = a

GETG r1, print
CALL r1, 1, r0
==============


a = 23 + 34 * b 

= 
 a
 + 
  23
  *
   34
   b
   
NUM r0 34
r1 = b
MUL r2 r0 r1
NUM r3 23
r4 = a
ADD r4, r2, r3

